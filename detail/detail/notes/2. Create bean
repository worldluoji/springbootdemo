当创建一个 Bean 时，调用的方法是 AbstractAutowireCapableBeanFactory#createBeanInstance。
它主要包含两大基本步骤：寻找构造器和通过反射调用构造器创建实例。

Spring 会先执行 determineConstructorsFromBeanPostProcessors 方法来获取构造器，
然后通过 autowireConstructor 方法带着构造器去创建实例:

// Candidate constructors for autowiring?
Constructor<?>[] ctors = determineConstructorsFromBeanPostProcessors(beanClass, beanName);
if (ctors != null || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||
      mbd.hasConstructorArgumentValues() || !ObjectUtils.isEmpty(args)) {
   return autowireConstructor(beanName, mbd, ctors, args);
}

autowireConstructor 方法要创建实例，不仅需要知道是哪个构造器，还需要知道构造器对应的参数,
这点从最后创建实例的方法名也可以看出，参考如下（即 ConstructorResolver#instantiate）
private Object instantiate(
      String beanName, RootBeanDefinition mbd, Constructor<?> constructorToUse, Object[] argsToUse) 


继续查看ConstructorResolver#autowireConstructor，发现参数从下面方法获取：
argsHolder = createArgumentArray(beanName, mbd, resolvedValues, bw, paramTypes, paramNames,
      getUserDeclaredConstructor(candidate), autowiring, candidates.length == 1);

从createArgumentArray方法可以看到，参数类型是字符串时，是从beanFactory中获取的：
->resolveAutowiredArgument
    ->this.beanFactory.resolveDependency(new DependencyDescriptor(param, true), beanName, autowiredBeanNames, typeConverter);